<Window x:Class="OneNotePieMenu.PieMenuWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:PieInTheSky;assembly=PieInTheSky"
        xmlns:custom="clr-namespace:OneNotePieMenu"
        Title="PieMenuWindow" Height="560" Width="560" AllowsTransparency="True" WindowStyle="None"
        MouseLeftButtonDown="MainWindow_OnMouseLeftButtonDown" Icon="dayplanner.ico"
        MouseRightButtonDown="PieMenuWindow_OnMouseRightButtonDown"
        >
    <Window.Background>
        <SolidColorBrush Opacity="0.01" Color="White"/>
    </Window.Background>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static custom:PieMenuWindow.AugmentCommand}" Executed="Augment_OnClick"/>
        <CommandBinding Command="{x:Static custom:PieMenuWindow.TodayCommand}" Executed="Today_Click"/>
    </Window.CommandBindings>



    <Canvas>
        <p:PieMenu x:Name="Menu1" 
                    Background="SteelBlue"
                    SelectedBackground="LightBlue"
                   FontSize="20" Radius="130" InnerRadius="0"
                   RotateText="False"
                   Height="560" Width="560" Canvas.Top="28"
                   >
            <p:PieMenuItem Header="Augment" Background="LightSalmon" Click="Augment_OnClick">
            </p:PieMenuItem>

            <p:PieMenuItem Header="Topic" Click="Topic_OnClick">
                <p:PieMenuItem Header="Picker" />
                <p:PieMenuItem Header="LRU1" Click="GotoTopic_OnClick"/>
                <p:PieMenuItem Header="LRU2"   Click="GotoTopic_OnClick"/>
                <p:PieMenuItem Header="LRU3"  Click="GotoTopic_OnClick"/>
                <p:PieMenuItem Header="LRU4"  Click="GotoTopic_OnClick"/>
            </p:PieMenuItem>
            <p:PieMenuItem Header="People">
                <p:PieMenuItem Header="Next Meeting"  Click="PersonNext_OnClick"/>
                <p:PieMenuItem Header="Last Meeting " Click="PersonPrev_OnClick"/>
                <p:PieMenuItem Header="Today Meeting" Click="PersonToday_OnClick"/>
            </p:PieMenuItem>
            <p:PieMenuItem Header="Calendar">
                <p:PieMenuItem Header="Today" Click="Today_Click"/>
                <p:PieMenuItem Header="Yesterday" Click="Yesterday_OnClick"/>
                <p:PieMenuItem Header="This Week" Click="ThisWeek_OnClick"/>
                <p:PieMenuItem Header="Time Machine" Click="TimeMachine_OnClick" />
            </p:PieMenuItem>
        </p:PieMenu>
        <DatePicker Name="TimeMachineDatePicker" Canvas.Left="461" Canvas.Top="51" Background="SteelBlue" FontSize="15" Visibility="Hidden"/>
        <TextBlock Name="CurrentPerson" Canvas.Left="162" Canvas.Top="260" Width="97" Background="LightBlue"  Text="{Binding SelectedValue, ElementName=PeopleList}" FontSize="19" TextAlignment="Center" MouseLeftButtonUp="CurrentPerson_OnMouseLeftButtonUp" Height="26"></TextBlock>
        <ComboBox Name="PeopleList" Canvas.Left="142" Canvas.Top="260" Width="117"  FontSize="19"  Visibility="Hidden" DropDownClosed="PeopleList_OnDropDownClosed" Height="30">
            <!--
            Changing the color of a combo box is hard see the following article: 
            http://social.technet.microsoft.com/wiki/contents/articles/24240.changing-the-background-color-of-a-combobox-in-wpf-on-windows-8.aspxw
            If there's a simpler answer, use that inst
            -->

            <ComboBox.Resources>
                <!-- color of ComboBoxItem -->
                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="LightBlue" />
                <!-- Mouse over color of ComboBoxItem -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
            </ComboBox.Resources>
        </ComboBox>

    </Canvas>
    <!-- We can't use the default context menu behavior (always pop on right click), because we only want the context menu to pop when we're outside of the pie menu.
         What we'll do instead is pop this "un-associated" context menu from the RightButton handler when we're not on the pie menu.

        See - http://www.wpf-tutorial.com/common-interface-controls/contextmenu/ for where the idea was originated at .
    -->
    <Window.Resources>
        <ContextMenu x:Key="DefaultContextMenu">
            <MenuItem Header="Minimize" Click="MinimizeClicked"/>
            <MenuItem Header="On Top" Click="OnTopClicked"/>
            <MenuItem Header="About" Click="AboutClicked"/>
            <MenuItem Header="Exit" Click="ExitClicked"/>
        </ContextMenu>
    </Window.Resources>
</Window>
